// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Model
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  fullName  String   @map("full_name")
  cedula    String   @unique
  phone     String?
  role      Role     @default(USER)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  documents Document[]
  refreshTokens RefreshToken[]

  @@map("users")
}

// Refresh Token Model (for JWT refresh tokens)
model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

// Document Model (metadata stored in PostgreSQL)
model Document {
  id          String         @id @default(uuid())
  title       String
  description String?
  type        DocumentType
  status      DocumentStatus @default(PENDING)
  userId      String         @map("user_id")
  fileId      String?        @unique @map("file_id") // MongoDB GridFS file ID
  fileName    String?        @map("file_name")
  fileSize    Int?           @map("file_size")
  mimeType    String?        @map("mime_type")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("documents")
}

// Enums
enum Role {
  USER
  ADMIN
}

enum DocumentType {
  INCAPACIDAD
  PENSION
  CERTIFICADO_MEDICO
  HISTORIA_CLINICA
  OTRO
}

enum DocumentStatus {
  PENDING
  APPROVED
  REJECTED
  IN_REVIEW
}
